{"version":3,"sources":["db/dbtest.js"],"names":["insert","getByConditions","db","User","userName","password","resolve","userObj","name","save","err","res","error","wherestr","find"],"mappings":";;;;;;;;;;QAYgBA,M,GAAAA,M;QAqBAC,e,GAAAA,e;;AAjChB;;AAIA;;;;AAKA,MAAMC,KAAK,0BAAX;AACA,MAAMC,OAAO,iCAAiBD,EAAjB,CAAb;;AAEO,SAASF,MAAT,CAAgBI,QAAhB,EAA0BC,QAA1B,EAAoC;AACvC,WAAO,sBAAaC,OAAD,IAAa;AAC5B,cAAMC,UAAU,IAAIJ,IAAJ,CAAS,EAAEK,MAAMJ,QAAR,EAAkBC,QAAlB,EAAT,CAAhB;;AAEAE,gBAAQE,IAAR,CAAa,CAACC,GAAD,EAAMC,GAAN,KAAc;AACvB,gBAAID,GAAJ,EAAS;AACL,iCAAM,eAAcA,GAAI,EAAxB;AACA;AACAJ,wBAAQ;AACJM,2BAAOF;AADH,iBAAR;AAGH,aAND,MAMO;AACH,iCAAM,iBAAgBC,GAAI,EAA1B;AACAL,wBAAQ;AACJK;AADI,iBAAR;AAGH;AACJ,SAbD;AAcH,KAjBM,CAAP;AAkBH;;AAEM,SAASV,eAAT,CAAyBG,QAAzB,EAAmC;AACtC,WAAO,sBAAaE,OAAD,IAAa;AAC5B,cAAMO,WAAW,EAAEL,MAAMJ,QAAR,EAAjB;;AAEAD,aAAKW,IAAL,CAAUD,QAAV,EAAoB,CAACH,GAAD,EAAMC,GAAN,KAAc;AAC9B,gBAAID,GAAJ,EAAS;AACL,iCAAM,aAAYA,GAAI,EAAtB;AACA;AACAJ,wBAAQ;AACJM,2BAAOF;AADH,iBAAR;AAGH,aAND,MAMO;AACH,iCAAM,WAAUC,GAAI,EAApB;AACAL,wBAAQ;AACJK;AADI,iBAAR;AAGH;AACJ,SAbD;AAcH,KAjBM,CAAP;AAkBH","file":"dbtest.js","sourcesContent":["import {\n    createDb,\n    createUserModule,\n} from './dbmanager';\nimport {\n    warn,\n} from '../util/debug';\n\n\nconst db = createDb();\nconst User = createUserModule(db);\n\nexport function insert(userName, password) {\n    return new Promise((resolve) => {\n        const userObj = new User({ name: userName, password });\n\n        userObj.save((err, res) => {\n            if (err) {\n                warn(`Inset Error:${err}`);\n                // 如果reject了，会抛出错误，因此暂时先resolve\n                resolve({\n                    error: err,\n                });\n            } else {\n                warn(`Inset Success:${res}`);\n                resolve({\n                    res,\n                });\n            }\n        });\n    });\n}\n\nexport function getByConditions(userName) {\n    return new Promise((resolve) => {\n        const wherestr = { name: userName };\n    \n        User.find(wherestr, (err, res) => {\n            if (err) {\n                warn(`Get Error:${err}`);\n                // 如果reject了，会抛出错误，因此暂时先resolve\n                resolve({\n                    error: err,\n                });\n            } else {\n                warn(`Get Res:${res}`);\n                resolve({\n                    res,\n                });\n            }\n        });\n    });\n}"]}