{"version":3,"sources":["server/room.js"],"names":["Room","constructor","_roomId","_socket","_clients","id","clients","getClientsCount","length","socket","removeClient","client","clientId","destroy","addClient","clearClients","keys","len","i","undefined","disconnect","toString"],"mappings":";;;;;;;;;;;;AAAA;;;AAGA,MAAMA,IAAN,CAAW;AACPC,gBAAYC,OAAZ,EAAqBC,OAArB,EAA8B;AAC1B;AACA,aAAKD,OAAL,GAAeA,OAAf;AACA;AACA,aAAKC,OAAL,GAAeA,OAAf;AACA;AACA,aAAKC,QAAL,GAAgB,EAAhB;AACH;;AAED,QAAIC,EAAJ,GAAS;AACL,eAAO,KAAKH,OAAZ;AACH;;AAED,QAAII,OAAJ,GAAc;AACV,eAAO,KAAKF,QAAZ;AACH;;AAEDG,sBAAkB;AACd,eAAO,oBAAY,KAAKH,QAAjB,EAA2BI,MAAlC;AACH;;AAED,QAAIC,MAAJ,GAAa;AACT,eAAO,KAAKN,OAAZ;AACH;;AAEDO,iBAAaC,MAAb,EAAqB;AACjB,YAAI,CAACA,MAAL,EAAa;AACT,mBAAO,KAAP;AACH;AACD,cAAMC,WAAWD,OAAON,EAAxB;;AAEA,YAAI,CAAC,KAAKD,QAAL,CAAcQ,QAAd,CAAL,EAA8B;AAC1B,mBAAO,KAAP;AACH;;AAED,aAAKR,QAAL,CAAcQ,QAAd,EAAwBC,OAAxB;AACA,eAAO,KAAKT,QAAL,CAAcQ,QAAd,CAAP;;AAEA,eAAO,IAAP;AACH;;AAEDE,cAAUH,MAAV,EAAkB;AACd,YAAI,CAACA,MAAL,EAAa;AACT,mBAAO,KAAP;AACH;AACD,cAAMC,WAAWD,OAAON,EAAxB;;AAEA,YAAI,KAAKD,QAAL,CAAcQ,QAAd,CAAJ,EAA6B;AACzB,mBAAO,KAAP;AACH;;AAED,aAAKR,QAAL,CAAcQ,QAAd,IAA0BD,MAA1B;;AAEA,eAAO,IAAP;AACH;;AAEDI,mBAAe;AACX,YAAI,CAAC,KAAKX,QAAV,EAAoB;AAChB;AACH;AACD,cAAMY,OAAO,oBAAY,KAAKZ,QAAjB,CAAb;AACA,cAAMa,MAAMD,KAAKR,MAAjB;;AAEA,aAAK,IAAIU,IAAI,CAAb,EAAgBA,IAAID,GAApB,EAAyBC,GAAzB,EAA8B;AAC1B,iBAAKd,QAAL,CAAcY,KAAKE,CAAL,CAAd,EAAuBL,OAAvB;AACH;;AAED,aAAKT,QAAL,GAAgB,EAAhB;AACH;;AAEDS,cAAU;AACN;AACA,aAAKE,YAAL;AACA,aAAKX,QAAL,GAAgBe,SAAhB;AACA,aAAKhB,OAAL,IAAgB,KAAKA,OAAL,CAAaiB,UAAb,CAAwB,IAAxB,CAAhB;AACA,aAAKlB,OAAL,GAAeiB,SAAf;AACH;;AAEDE,eAAW;AACP,eAAQ,GAAE,KAAKnB,OAAQ,EAAvB;AACH;AAjFM;;kBAoFIF,I","file":"room.js","sourcesContent":["/**\n * 房间对象类\n */\nclass Room {\n    constructor(_roomId, _socket) {\n        // 所属的房间号\n        this._roomId = _roomId;\n        // 所持有的socket对象\n        this._socket = _socket;\n        // 客户端持有默认是一个空对象，key是clientid，value是client\n        this._clients = {};\n    }\n    \n    get id() {\n        return this._roomId;\n    }\n    \n    get clients() {\n        return this._clients;\n    }\n    \n    getClientsCount() {\n        return Object.keys(this._clients).length;\n    }\n    \n    get socket() {\n        return this._socket;\n    }\n    \n    removeClient(client) {\n        if (!client) {\n            return false;\n        }\n        const clientId = client.id;\n        \n        if (!this._clients[clientId]) {\n            return false;\n        }\n        \n        this._clients[clientId].destroy();\n        delete this._clients[clientId];\n        \n        return true;\n    }\n    \n    addClient(client) {\n        if (!client) {\n            return false;\n        }\n        const clientId = client.id;\n        \n        if (this._clients[clientId]) {\n            return false;\n        }\n        \n        this._clients[clientId] = client;\n        \n        return true;\n    }\n    \n    clearClients() {\n        if (!this._clients) {\n            return;\n        }\n        const keys = Object.keys(this._clients);\n        const len = keys.length;\n        \n        for (let i = 0; i < len; i++) {\n            this._clients[keys[i]].destroy();\n        }\n        \n        this._clients = {};\n    }\n    \n    destroy() {\n        // 销毁每一个client\n        this.clearClients();\n        this._clients = undefined;\n        this._socket && this._socket.disconnect(true);\n        this._roomId = undefined;\n    }\n    \n    toString() {\n        return `${this._roomId}`;\n    }\n}\n\nexport default Room;"]}